import re
import subprocess
from typing import List


def split_version(version: str) -> list:
    """Splits a version string into parts using regular expressions and returns a list of those parts."""

    version_without_brackets = re.sub('[()]', ' ', version)
    version_without_slashes = re.sub('/', ' ', version_without_brackets)
    parts = version_without_slashes.split()

    return parts


def search_exploits_iterates(software_info: List[str]) -> List[str]:
    """
    This function takes a list of software information (name and version) and uses Metasploit's msfconsole to search for
    possible exploits. It iterates over the list, performing a search for each item and combination of items. The results
    from each search are added to a list of exploits which is returned by the function.
    """

    exploits = []
    for i in range(1, len(software_info) + 1):
        search_term = ' '.join(software_info[:i])
        command = f"msfconsole -q -x \"search type:exploit {search_term} ; exit\""
        result = subprocess.check_output(command, shell=True).decode('utf-8').split('\n')
        print(result)

        pattern = re.compile(r'^exploit/.*\s$')

        for line in result:
            if pattern.match(line.strip()):
                exploits.append(line.strip())

    return exploits


if __name__ == '__main__':
    seft_info = 'distccd v1 ((GNU) 4.2.4 (Ubuntu 4.2.4-1ubuntu4)) 4.7p1 Debian 8ubuntu1 (protocol 2.0) Tomcat/Coyote'
    service_info = split_version(seft_info)
    print(f"service_info ==> {service_info}")

    exploits = search_exploits_iterates(service_info)
    print(f"exploits ==> {exploits}")
